# load the iris dataset
from sklearn.datasets import load_iris
iris = load_iris()

# store the feature matrix (X) and response vector (y)
X = iris.data
y = iris.target
#### X, y = load_iris(return_X_y=True)

### take only two features in X
X.shape
X_two = X[:,1:3]
X_two.shape

# splitting X_two and y into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X_two, y, test_size=0.3, random_state=1)

#training the model on training set

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=5, metric='euclidean') 
knn.fit(X_train, y_train)

#model testing
y_pred = knn.predict(X_test)

#model evaluation
from sklearn.metrics import accuracy_score 
print ("Accuracy : ", accuracy_score(y_test, y_pred))

"""Print all other model evaluation scores - confusion matrix, precision, recall, F1 score and explore area under the curve metric.

Check how these values changes for different values of K neighbors and different metrics of distance.

Write your observations.
"""

#scatter plots for understanding
from matplotlib import pyplot as plt
plt.scatter(
    X_test[:,0],X_test[:,1],c=y_pred,
)

from matplotlib import pyplot as plt
plt.scatter(
    X_test[:,0],X_test[:,1],c=y_test,
)
